-- Old version before using rustaceanvim plugin.
--
-- local function reload_workspace(bufnr)
--   local clients = vim.lsp.get_clients { bufnr = bufnr, name = 'rust_analyzer' }
--   for _, client in ipairs(clients) do
--     vim.notify 'Reloading Cargo Workspace'
--     client.request('rust-analyzer/reloadWorkspace', nil, function(err)
--       if err then
--         error(tostring(err))
--       end
--       vim.notify 'Cargo workspace reloaded'
--     end, 0)
--   end
-- end
--
-- local lsp_module = require('endevvr.lsp_helpers')
--
-- local links = {
--   ["@lsp.type.variable.rust"] = "@variable",
-- }
--
-- for newgroup, oldgroup in pairs(links) do
--   vim.api.nvim_set_hl(0, newgroup, { link = oldgroup, default = true })
-- end
--
-- return {
--   settings = {
--     ['rust-analyzer'] = {
--       inlayHints = {
--         typeHints = { enable = false },
--         parameterHints = { enable = true },
--         chainingHints = { enable = false },
--       },
--       checkOnSave = {
--         enable = true,
--       },
--       check = {
--         command = "clippy",
--       },
--       imports = {
--         group = {
--           enable = false,
--         },
--       },
--     }
--   },
--   on_attach = function(client, bufnr)
--     vim.api.nvim_buf_create_user_command(0, 'LspCargoReload', function()
--       reload_workspace(0)
--     end, { desc = 'Reload current cargo workspace' })
--     lsp_module.on_attach(client, bufnr)
--   end,
-- }
